// Generated by Dagger (https://dagger.dev).
package com.siddharth_bhat_music_player.music_player.exoplayer;

import com.siddharth_bhat_music_player.music_player.data.remote.MusicDatabase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseMusicSource_Factory<T> implements Factory<FirebaseMusicSource<T>> {
  private final Provider<MusicDatabase> musicDatabaseProvider;

  public FirebaseMusicSource_Factory(Provider<MusicDatabase> musicDatabaseProvider) {
    this.musicDatabaseProvider = musicDatabaseProvider;
  }

  @Override
  public FirebaseMusicSource<T> get() {
    return newInstance(musicDatabaseProvider.get());
  }

  public static <T> FirebaseMusicSource_Factory<T> create(
      Provider<MusicDatabase> musicDatabaseProvider) {
    return new FirebaseMusicSource_Factory<T>(musicDatabaseProvider);
  }

  public static <T> FirebaseMusicSource<T> newInstance(MusicDatabase musicDatabase) {
    return new FirebaseMusicSource<T>(musicDatabase);
  }
}
