// Generated by Dagger (https://dagger.dev).
package com.siddharth_bhat_music_player.music_player.di;

import android.content.Context;
import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServiceModule_ProvideDataSourceFactoryFactory implements Factory<DefaultDataSourceFactory> {
  private final Provider<Context> contextProvider;

  public ServiceModule_ProvideDataSourceFactoryFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public DefaultDataSourceFactory get() {
    return provideDataSourceFactory(contextProvider.get());
  }

  public static ServiceModule_ProvideDataSourceFactoryFactory create(
      Provider<Context> contextProvider) {
    return new ServiceModule_ProvideDataSourceFactoryFactory(contextProvider);
  }

  public static DefaultDataSourceFactory provideDataSourceFactory(Context context) {
    return Preconditions.checkNotNullFromProvides(ServiceModule.INSTANCE.provideDataSourceFactory(context));
  }
}
